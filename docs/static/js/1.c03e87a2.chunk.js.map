{"version":3,"sources":["components/initialBlock/index.js","components/cardsPresentation/cards.js","common/iconContainer/index.js","components/cardsPresentation/iconContainerCard.js","common/infoTitle/index.js","common/paragraphCards/index.js","components/cardsPresentation/textContainerCard.js","components/cardsPresentation/index.js","common/sectionTitle/index.js","components/aboutUs/aboutUsText.js","common/imageWithShadow/index.js","components/aboutUs/aboutUsImage.js","components/aboutUs/index.js","components/testimonial/testimonialText.js","components/testimonial/testimonialSliderItem.js","components/testimonial/index.js","components/team/teamText.js","components/team/teamSliderItem.js","components/team/index.js","components/contact/contactText.js","common/input/index.js","helpers/firebase.js","hooks/useForm.js","helpers/validationRules.js","components/contact/contactForm.js","components/contact/contactText-IconItem.js","components/contact/contactMap.js","components/contact/index.js","pages/Home/index.js","common/headingTitle/index.js"],"names":["InitialBlock","title","text","button","click","className","id","autoplay","infinite","autoplaySpeed","speed","slidesToShow","slidesToScroll","accesibility","adaptiveHeight","dots","arrows","draggable","fade","pauseOnHover","style","backgroundImage","content","InitialContent","children","onClick","scrollTo","document","getElementById","scrollIntoView","behavior","Cards","IconContainer","icon","IconContainerCard","InfoTitle","ParagraphCards","textContainerCard","paragraph","CardsPresentation","otherClass","CardsPresentationContent","items","map","el","SectionTitle","AboutUsText","sectionTitle","headingTitle","iconsContent","ImageWithShadow","positionShadow","src","alt","AboutUsImage","AboutUs","AboutUsContent","icons","number","TestimonialText","TestimonialSliderItem","sliderParagraph","sliderImg","sliderName","sliderOccupation","Testimonial","TestimonialContent","responsive","breakpoint","settings","itemsSlider","img","name","occupation","TeamText","TeamSliderItem","facebook","twitter","linkedin","href","Team","TeamContent","sliderItems","ContactText","Input","placeholder","onChange","value","spellCheck","firebaseConfig","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","useForm","validate","useState","values","setValues","errors","setErrors","shouldSubmit","setShouldSubmit","useEffect","type","Object","keys","length","notification","message","description","handleChange","event","persist","target","handleSubmit","preventDefault","database","getDatabase","databaseRef","ref","push","then","catch","e","console","error","email","test","phone","ContactForm","ValidationType","ErrorMessage","onSubmit","ContactTextIconItem","iconTitle","iconText","ContactMap","width","height","border","loading","Contact","ContactContent","itemsContact","Home","HeadingTitle"],"mappings":"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","file":"static/js/1.c03e87a2.chunk.js","sourcesContent":["import Slider from \"react-slick\";\r\nimport Button from '../../common/button'\r\nimport HeadingTitle from '../../common/headingTitle'\r\nimport \"./styles.scss\"\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nimport InitialContent from '../../content/initialContent.json'\r\n\r\n\r\n//Componente del bloque inicial, todo el texto de este componente se encuentra en 'content/initialContent.json'\r\n\r\nconst InitialBlock = ({ title, text, button, click }) => {\r\n\r\n    //Configuración del slider, puedes checar más en 'https://react-slick.neostack.com/docs/api'\r\n    const settings = {\r\n        autoplay: true,\r\n        infinite: true,\r\n        autoplaySpeed: 6000,\r\n        speed: 1000,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        accesibility: false,\r\n        adaptiveHeight: false,\r\n        dots: false,\r\n        arrows: false,\r\n        draggable: false,\r\n        fade: true,\r\n        pauseOnHover: false\r\n    };\r\n\r\n    // función que se activa al presionar el botón, desliza suavemente hacia la sección escogida\r\n    const scrollTo = (id) => {\r\n        const element = document.getElementById(id);\r\n        element.scrollIntoView({\r\n            behavior: \"smooth\",\r\n        });\r\n    };\r\n\r\n    return(\r\n        <section className='initialBLock' id='inicio'>\r\n            {/* slider */}\r\n            <Slider {...settings} className='slider'>\r\n                <div>\r\n                    <div style={{backgroundImage: 'url(\"./img/initial 1.png\")'}}>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div style={{backgroundImage: 'url(\"./img/initial 2.png\")'}}>\r\n                    </div>\r\n                </div>\r\n            </Slider>\r\n\r\n            {/* texto */}\r\n            <article>\r\n                <div className='articleRow'>\r\n                    <div>\r\n                        <HeadingTitle content={InitialContent.title} />\r\n                        <h3>{InitialContent.text}</h3>\r\n                        <Button children={InitialContent.button[0].content} onClick={() => scrollTo(InitialContent.button[0].scrollTo)} />\r\n                    </div>\r\n                </div>\r\n            </article>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default InitialBlock","\r\n//Componente de contenedor de tarjetas, continene el ícono y el texto\r\nconst Cards = ({ content }) => {\r\n    return(\r\n        <div className='card-item'>{content}</div>\r\n    )\r\n}\r\n\r\nexport default Cards","import './styles.scss'\r\n\r\n// Componente de iconos con fondo gris y esquinas redondeadas\r\nconst IconContainer = ({ icon }) => {\r\n    return(\r\n        <div className='iconContainer'>\r\n            {/* solo hay que agregar la clase del ícono de fort awesome */}\r\n            <i className={icon}></i>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IconContainer","import IconContainer from '../../common/iconContainer'\r\n\r\n// Componente del icono de las tarjetas\r\nconst IconContainerCard = ({ icon }) => {\r\n    return(\r\n        <div className='iconContainerCard'>\r\n            {/* Ícono */}\r\n            <IconContainer icon={icon} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IconContainerCard","import './styles.scss'\r\n\r\n// Componente de textos de cabecera en tarjetas\r\nconst InfoTitle = ({ content }) => {\r\n    return(\r\n        <h3 className='info-title'>{content}</h3>\r\n    )\r\n}\r\n\r\nexport default InfoTitle","import './styles.scss'\r\n\r\n// Componente con párrafo que se incluye en las tarjetas\r\nconst ParagraphCards = ({ content }) => {\r\n    return(\r\n        <p className='paragraphCards'>{content}</p>\r\n    )\r\n}\r\n\r\nexport default ParagraphCards","import InfoTitle from '../../common/infoTitle'\r\nimport ParagraphCards from '../../common/paragraphCards'\r\n\r\n// Componente del texto de las tarjetas\r\nconst textContainerCard = ({ title, paragraph  }) => {\r\n    return(\r\n        <div>\r\n            {/* Título */}\r\n            <InfoTitle content={title} />\r\n            {/* Paárrafo */}\r\n            <ParagraphCards content={paragraph} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default textContainerCard","import Cards from './cards'\r\nimport Container from '../../common/container'\r\nimport IconContainerCard from './iconContainerCard'\r\nimport TextContainerCard from './textContainerCard'\r\nimport './styles/styles.scss'\r\n\r\nimport CardsPresentationContent from '../../content/cardsPresentationContent.json'\r\n\r\n// Todo el texto se toma del archivo '../../content/cardsPresentationContent.json'\r\n\r\nconst CardsPresentation = () => {\r\n    return(\r\n        <Container otherClass='Cards' id='cursos' content={\r\n            // {/* Componente de contenedor de las tarjetas recorridas por un map, devolviendo el número de items q ue hay en el cardsContent.json */}\r\n            CardsPresentationContent.items.map( el =>\r\n                <Cards key={el.id} content={\r\n                    <>\r\n                    {/* íconos */}\r\n                        <IconContainerCard icon={CardsPresentationContent.items[el.id].icon} />\r\n                        {/* texto */}\r\n                        <TextContainerCard title={CardsPresentationContent.items[el.id].title} paragraph={CardsPresentationContent.items[el.id].paragraph} />\r\n                    </>\r\n                } />\r\n            )\r\n        } />\r\n            \r\n    )\r\n}\r\n\r\nexport default CardsPresentation","import './styles.scss'\r\n\r\n// Componente que se utiliza como título de sección, se muestra en color verde\r\nconst SectionTitle = ({ content }) => {\r\n    return(\r\n        <h3 className='sectionTitle'>{content}</h3>\r\n    )\r\n}\r\n\r\nexport default SectionTitle","import SectionTitle from '../../common/sectionTitle'\r\nimport HeadingTitle from '../../common/headingTitle'\r\nimport Paragraph from '../../common/paragraph'\r\n\r\n// Componente de la parte del texto y los íconos en el 'about Us'\r\nconst AboutUsText = ({ sectionTitle, headingTitle, paragraph, iconsContent }) => {\r\n    return(\r\n        <div className='aboutUsText'>\r\n            {/* Título de sección */}\r\n            <SectionTitle content={sectionTitle} />\r\n            {/* Título de Cabecera */}\r\n            <HeadingTitle content={headingTitle} />\r\n            {/* Párrafo */}\r\n            <Paragraph content={paragraph} />\r\n            {/* iconos */}\r\n            <div className='aboutUs-Icons'>\r\n                    {iconsContent}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutUsText","import './styles.scss'\r\n\r\n// Componente de imagenes que tienen esquinas redondeadas y una sombra verde\r\nconst ImageWithShadow = ({ positionShadow, src, alt }) => {\r\n    return(\r\n        <div className={`imageShadow ${positionShadow}`}>\r\n            <img src={`img/${src}`} alt={alt} title={alt} />\r\n            {/* positionShadow debe ser left o rigth para indicar el lado de la sombra */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageWithShadow","import ImageWithShadow from '../../common/imageWithShadow'\r\n\r\n// Componente que contiene la imagen con sombra del 'About Us'\r\nconst AboutUsImage = () => {\r\n    return(\r\n        <div className='aboutUsImage'>\r\n            <ImageWithShadow\r\n            src='about-us.jpg'\r\n            alt='About Us'\r\n            positionShadow='left'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutUsImage","import Container from '../../common/container'\r\nimport IconContainer from '../../common/iconContainer'\r\nimport AboutUsText from './aboutUsText'\r\nimport AboutUsImage from './aboutUsImage'\r\nimport './styles/styles.scss'\r\n\r\nimport AboutUsContent from '../../content/aboutUsContent.json'\r\n\r\n// Componente del About Us, contiene el componente de texto e imagen\r\n// Todo el texto se encuentra en el archivo '../../content/aboutUsContent.json'\r\nconst AboutUs = () => {\r\n    return(\r\n        <Container otherClass='aboutUs' id='acerca-de' content={\r\n            <>\r\n                {/* Componente de texto */}\r\n                <AboutUsText\r\n                sectionTitle={AboutUsContent.sectionTitle} \r\n                headingTitle={AboutUsContent.headingTitle} \r\n                paragraph={AboutUsContent.text} \r\n                // Se recorreo la cantidad de iconos que existen y se imprimen\r\n                iconsContent={\r\n                    AboutUsContent.icons.map( el => {\r\n                        return(\r\n                        <div key={el.id} className='aboutUs-Icon-item'>\r\n                            <div>\r\n                            <IconContainer icon={el.icon} />\r\n                            </div>\r\n                            <div>\r\n                                <h2>{el.number}</h2>\r\n                                <h3>{el.text}</h3>\r\n                            </div>\r\n                        </div>\r\n                        )\r\n                    })\r\n                }\r\n                />\r\n\t\t\t\t{/* Componente de imagen */}\r\n                <AboutUsImage />\r\n            </>\r\n        }/>\r\n    )\r\n}\r\n\r\nexport default AboutUs","import Container from \"../../common/container\"\r\nimport SectionTitle from '../../common/sectionTitle'\r\nimport HeadingTitle from '../../common/headingTitle'\r\nimport Paragraph from '../../common/paragraph'\r\n\r\n//Componente que contiene el texto y fondo verde de la sección 'Testimoniales'\r\n\r\nconst TestimonialText = ({ sectionTitle, headingTitle, paragraph }) => {\r\n    return(\r\n        <div className='testimonialText'>\r\n            <Container content={\r\n                <>\r\n                    {/* Título de sección */}\r\n                    <SectionTitle content={sectionTitle} />\r\n                    {/* Título de cabecera */}\r\n                    <HeadingTitle content={headingTitle} />\r\n                    {/* Párrafo */}\r\n                    <Paragraph content={paragraph} />\r\n                </>\r\n            } />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TestimonialText","import Paragraph from '../../common/paragraph'\r\n\r\n//Componente del slider de la sección 'Testimoniales'\r\n\r\nconst TestimonialSliderItem = ({ sliderParagraph, sliderImg, sliderName, sliderOccupation }) => {\r\n    return(\r\n        // contenedor\r\n        <div className='testimonialSliderItem'>\r\n            {/* párrafo */}\r\n            <Paragraph content={sliderParagraph}/>\r\n            <div className='testimonialSliderItem-info'>\r\n                <div>\r\n                    <div>\r\n                        {/* imagen */}\r\n                        <img src={`img/${sliderImg}`} alt='' />\r\n                    </div>\r\n                    <div>\r\n                        {/* nombre de la persona */}\r\n                        <strong>{sliderName}</strong>\r\n                        {/* ocupación */}\r\n                        <span>{sliderOccupation}</span>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {/* ícono de comillas */}\r\n                    <span><i className=\"fas fa-quote-left\"></i></span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TestimonialSliderItem","import TestimonialText from './testimonialText'\r\nimport TestimonialSliderItem from './testimonialSliderItem'\r\nimport Container from '../../common/container';\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport './styles/styles.scss'\r\n\r\nimport TestimonialContent from '../../content/testimonialContent.json'\r\n\r\n// Component de la sección 'Testimoniales' contiene el componente del texto y el slider con las opiniones,toda la información se toma del archivo ../../content/testimonialContent.json\r\nconst Testimonial = () => {\r\n\r\n        //Configuración del slider, puedes checar más en 'https://react-slick.neostack.com/docs/api'\r\n        const settings = {\r\n            autoplay: true,\r\n            infinite: true,\r\n            autoplaySpeed: 3000,\r\n            slidesToShow: 3,\r\n            slidesToScroll: 1,\r\n            adaptiveHeight: false,\r\n            dots: false,\r\n            arrows: false,\r\n            draggable: true,\r\n            pauseOnHover: true,\r\n            responsive: [\r\n                {\r\n                    breakpoint: 1000,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 750,\r\n                    settings: {\r\n                        slidesToShow: 1,\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n\r\n    return(\r\n        <section className='testimonial'>\r\n            {/* Componente de titulo, texto */}\r\n            <TestimonialText\r\n            sectionTitle={TestimonialContent.sectionTitle}\r\n            headingTitle={TestimonialContent.headingTitle}\r\n            paragraph={TestimonialContent.paragraph}\r\n            />\r\n\r\n            {/* Componente con el slider de las opiniones */}\r\n            <Container otherClass='testimonialSlider' content={\r\n                <Slider {...settings}>\r\n                    {/* se recoree el contenido con un map y se devuelve el número de artículos existentes */}\r\n                    {TestimonialContent.itemsSlider.map( el => {\r\n                        return(\r\n                            <TestimonialSliderItem\r\n                            key={el.id}\r\n                            sliderParagraph={el.text} \r\n                            sliderImg={el.img} \r\n                            sliderName={el.name} \r\n                            sliderOccupation={el.occupation}\r\n                            />\r\n                        )\r\n                    })}\r\n                </Slider>\r\n            } />\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Testimonial","import SectionTitle from '../../common/sectionTitle'\r\nimport HeadingTitle from '../../common/headingTitle'\r\n\r\n// Componente que continene el texto de la sección de 'Conoce nuestro equipo'\r\nconst TeamText = ({ sectionTitle, headingTitle }) => {\r\n    return(\r\n        <>\r\n            {/* Título de sección */}\r\n            <SectionTitle content={sectionTitle} />\r\n            {/* Título de cabecera */}\r\n            <HeadingTitle content={headingTitle} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TeamText","import InfoTitle from '../../common/infoTitle'\r\nimport Paragraph from '../../common/paragraph'\r\n\r\n//Componente que contiene los cards que van dentro del slider la sección 'Conoce nuestro equipo'\r\nconst TeamSliderItem = ({ img, facebook, twitter, linkedin, name, occupation }) => {\r\n    return(\r\n        // contenedor\r\n        <div className='teamSliderItem'>\r\n            <div className='teamSliderItem-img'>\r\n                {/* imagen */}\r\n                <img src={`img/${img}`} alt='' />\r\n                {/* parte oculta se muestra al hacer hover */}\r\n                <div className='teamSliderItem-hide'>\r\n                    <div>\r\n                        {/* redes sociales */}\r\n                        <a href={facebook}><i className=\"fab fa-facebook-f\"></i></a>\r\n                        <a href={twitter}><i className=\"fab fa-twitter\"></i></a>\r\n                        <a href={linkedin}><i className=\"fab fa-linkedin-in\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='teamSliderItem-text'>\r\n                {/* texto de la tarjeta */}\r\n                <InfoTitle content={name} />\r\n                {/* titulo */}\r\n                <Paragraph content={occupation} />\r\n                {/* párrafo */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamSliderItem","import Container from '../../common/container'\r\nimport TeamText from './teamText'\r\nimport TeamSliderItem from './teamSliderItem'\r\nimport Slider from \"react-slick\";\r\nimport './styles/styles.scss'\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nimport TeamContent from '../../content/teamContent.json'\r\n\r\n//Componente de la sección 'Conoce nuestro equipo' contiene, el texto, el slider y la infomación se toma del archivo '../../content/teamContent.json'\r\nconst Team = () => {\r\n\r\n            //Configuración del slider, puedes checar más en 'https://react-slick.neostack.com/docs/api'\r\n            const settings = {\r\n                autoplay: true,\r\n                infinite: true,\r\n                autoplaySpeed: 10000,\r\n                slidesToShow: 3,\r\n                slidesToScroll: 1,\r\n                dots: false,\r\n                arrows: false,\r\n                draggable: true,\r\n                pauseOnHover: true,\r\n                responsive: [\r\n                    {\r\n                        breakpoint: 1000,\r\n                        settings: {\r\n                            slidesToShow: 2,\r\n                        }\r\n                    },\r\n                    {\r\n                        breakpoint: 750,\r\n                        settings: {\r\n                            slidesToShow: 1,\r\n                        }\r\n                    }\r\n                ]\r\n            };\r\n\r\n    return(\r\n        <Container otherClass='team' content={\r\n            <>\r\n                {/* Componente de texto */}\r\n                <TeamText \r\n                sectionTitle={TeamContent.sectionTitle}\r\n                headingTitle={TeamContent.headingTitle}\r\n                />\r\n\r\n                {/* Componente del slider */}\r\n                <Slider {...settings} className='teamSlider'>\r\n                    {/* se recorre el contenido con un map y devuelve el numero de artículos existentes en el json */}\r\n                    {TeamContent.sliderItems.map( el => {\r\n                        return(\r\n                            <TeamSliderItem \r\n                            key={el.id}\r\n                            img={el.img} \r\n                            facebook={el.facebook} \r\n                            twitter={el.twitter} \r\n                            linkedin={el.linkedin} \r\n                            name={el.name} \r\n                            occupation={el.occupation}\r\n                            />\r\n                        )\r\n                    })}\r\n                </Slider>\r\n\r\n            </>\r\n        } />\r\n    )\r\n}\r\n\r\nexport default Team","import HeadingTitle from '../../common/headingTitle'\r\nimport Paragraph from '../../common/paragraph'\r\n\r\n// Componente de texto de la sección 'Contacto'\r\nconst ContactText = ({ headingTitle, paragraph, iconsContent }) => {\r\n    return(\r\n        <div className='contactText'>\r\n            {/* Titulo */}\r\n            <HeadingTitle content={headingTitle} />\r\n            {/* parráfo */}\r\n            <Paragraph content={paragraph} />\r\n            {/* items con iconos e infomación de contacto */}\r\n            <div className='contactTextIcons'>\r\n                {iconsContent}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactText","import './styles.scss'\r\n\r\n// Contenedor con input\r\n\r\nconst Input = ({ name, placeholder, onChange, otherClass, value }) => (\r\n    <div className='inputContainer'>\r\n        <input\r\n        className={otherClass}\r\n        // Clase adicional por si es necesario algún diseño en especial\r\n        spellCheck=\"false\"\r\n        placeholder={(placeholder)}\r\n        name={name}\r\n        onChange={onChange}\r\n        // Evento al cambiar el contenido\r\n        value={value}\r\n        />\r\n    </div>\r\n);\r\n\r\nexport default Input","//Componente donde se configura la conexion con Firebase\r\n\r\n// Firebase App (the core Firebase SDK) is always required and must be listed first\r\nimport { initializeApp } from 'firebase/app';\r\n\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = initializeApp ({\r\n    apiKey: \"AIzaSyCQNc-ym4f8GdLamcSrSLz3VDAJVEwr50Y\",\r\n    authDomain: \"financerr-3d454.firebaseapp.com\",\r\n    databaseURL: \"https://financerr-3d454-default-rtdb.firebaseio.com\",\r\n    projectId: \"financerr-3d454\",\r\n    storageBucket: \"financerr-3d454.appspot.com\",\r\n    messagingSenderId: \"304930037167\",\r\n    appId: \"1:304930037167:web:473b6bdf99f331478ca35a\",\r\n    measurementId: \"G-4QZV4PPGVE\"\r\n});\r\n\r\n\r\nexport default firebaseConfig","import { useState, useEffect } from \"react\";\r\nimport { notification } from \"antd\";\r\nimport 'antd/lib/notification/style/index.css';\r\nimport firebaseConfig from '../helpers/firebase'\r\nimport { getDatabase, ref, push } from 'firebase/database'\r\n\r\n// Creamos un Hook para validar el formulario y enviar la información a la base de datos\r\nconst useForm = (validate) => {\r\n    const [values, setValues] = useState({});\r\n    const [errors, setErrors] = useState({});\r\n    const [shouldSubmit, setShouldSubmit] = useState(false);\r\n\r\n    // Mensaje de éxito al enviar la información\r\n    const openNotificationWithIcon = (type) => {\r\n        notification[type]({\r\n            message: \"Success\",\r\n            description: \"Tu mensaje ha sido enviado con éxito!\",\r\n        });\r\n    };\r\n\r\n    // Manejador de evento que se usa al subir el formulario\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setErrors(validate(values));\r\n\r\n        if (Object.keys(values).length === 4) {\r\n        // Si no hay errores se ejectuta lo siguiente\r\n\r\n        // Conexión con la base de datos de firebase\r\n\t\tconst database = getDatabase(firebaseConfig)\r\n\r\n        // Referencia para indicar donde se guardara la información\r\n\t\tconst databaseRef = ref(database, 'form')\r\n\r\n        // con PushDataBase se envía la información\r\n\t\tconst pushDatabase = push(databaseRef, values)\r\n\r\n        // Finalmente se ejecuta\r\n        pushDatabase.then(() => {\r\n            // se cambia el estado setShouldSubmit a verdadero\r\n            setShouldSubmit(true);\r\n\t\t}).catch((e) => {\r\n            console.error(e)\r\n        });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(errors).length === 0 && shouldSubmit) {\r\n            // Si no hay errores y la información se envía bien, el valor de los input se cambia a vacío y se activa el emnsaje de exito\r\n            setValues(\"\");\r\n            openNotificationWithIcon(\"success\");\r\n        }\r\n    }, [errors, shouldSubmit]);\r\n\r\n    // Manejador de eventos para los input cada que cambien su contenido\r\n    const handleChange = (event) => {\r\n        event.persist();\r\n        // el valor de los input se suma al array 'values'\r\n        setValues((values) => ({\r\n            ...values,\r\n            [event.target.name]: event.target.value,\r\n        }));\r\n        setErrors((errors) => ({ ...errors, [event.target.name]: \"\" }));\r\n    };\r\n\r\n    return {\r\n        handleChange,\r\n        handleSubmit,\r\n\t\tshouldSubmit,\r\n        values,\r\n        errors,\r\n    };\r\n};\r\n\r\nexport default useForm;\r\n","// Validación del formulario\r\n\r\nexport default function validate(values) {\r\n    // Contamos el número de errores\r\n    let errors = {};\r\n    // Verificamos que ninguno de los campos este vacío\r\n    if (!values.name) {\r\n        errors.name = \"El Nombre es Obligatorio\";\r\n    }\r\n    if (!values.email) {\r\n        errors.email = \"El Correo Electrónico es Obligatorio\";\r\n        // Verificamos que el correo este bien escrito\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n        errors.email = \"El Correo Electrónico es Inválido\";\r\n    }\r\n    if (!values.phone) {\r\n        errors.phone = \"El Teléfono es Obligatorio\";\r\n    }    \r\n    \r\n    if (!values.message) {\r\n        errors.message = \"El Mensaje es Obligatorio\";\r\n    }\r\n    return errors;\r\n}","import Input from '../../common/input'\r\nimport Button from '../../common/button'\r\n\r\nimport useForm from \"../../hooks/useForm\";\r\nimport validate from \"../../helpers/validationRules\";\r\n\r\n// Componente del formulario de contacto\r\nconst ContactForm = () => {\r\n\r\n    const { values, errors, handleChange, handleSubmit } = useForm(validate);\r\n\r\n    // se valida el contenid o de los input y si está vacío mando un mensaje de erro\r\n    const ValidationType = ({ type }) => {\r\n        const ErrorMessage = errors[type];\r\n        return errors[type] ? (\r\n        <div className='error'>\r\n            <span>{ErrorMessage}</span>\r\n        </div>\r\n        ) : (\r\n        <span></span>\r\n        );\r\n    };  \r\n    \r\n    return(\r\n        <div className='contactForm'>\r\n            {/* Formulario */}\r\n            <form onSubmit={handleSubmit} id='contactForm'>\r\n                {/* validación */}\r\n                <ValidationType type=\"name\" />\r\n                {/* input */}\r\n                <Input\r\n                    placeholder='Tu Nombre'\r\n                    name='name'\r\n                    value={values.name || \"\"}\r\n                    onChange={handleChange}\r\n                />\r\n\r\n                <ValidationType type=\"email\" />\r\n                <Input\r\n                    placeholder='Tu Email'\r\n                    name='email'\r\n                    value={values.email || \"\"}\r\n                    onChange={handleChange}\r\n                />\r\n\r\n                <ValidationType type=\"phone\" />\r\n                <Input\r\n                    placeholder='Tu Teléfono'\r\n                    name='phone'\r\n                    value={values.phone || \"\"}\r\n                    onChange={handleChange}\r\n                />\r\n\r\n                <ValidationType type=\"message\" />\r\n                <Input\r\n                    otherClass='inputMessage'\r\n                    placeholder='Tu Mensaje'\r\n                    name='message'\r\n                    value={values.message || \"\"}\r\n                    onChange={handleChange}\r\n                />\r\n\r\n                {/* botón para enviar formulario */}\r\n                <Button\r\n                children='ENVIAR MENSAJE'\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactForm","import IconContainer from '../../common/iconContainer'\r\nimport InfoTitle from '../../common/infoTitle'\r\nimport ParagraphCards from '../../common/paragraphCards'\r\n\r\n// Componente que contiene un icono y la información de contacto en la sección de texto de 'Contacto'\r\nconst ContactTextIconItem = ({ icon, iconTitle, iconText }) => {\r\n    return(\r\n        <div className='contactText-IconItem'>\r\n            <div>\r\n                {/* icono */}\r\n                <IconContainer icon={icon} />\r\n            </div>\r\n            <div>\r\n                {/* Texto */}\r\n                <InfoTitle content={iconTitle} />\r\n                <ParagraphCards content={iconText} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactTextIconItem","// Componente del mapa de Google Mpas, para cambiar la dirección solo se cambia el src\r\n\r\nconst ContactMap = () => {\r\n    return(\r\n        <div className='contactMap'>\r\n\t\t\t<iframe title='Google Map' src=\"https://www.google.com/maps/embed?pb=!1m14!1m12!1m3!1d7531.378227218644!2d-99.69541805395102!3d19.295881216711297!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!5e0!3m2!1ses-419!2smx!4v1620454289782!5m2!1ses-419!2smx\" width=\"100%\" height=\"450\" style={{border: \"0\" }} loading=\"lazy\"></iframe>\r\n\t\t</div>\r\n    )\r\n}\r\n\r\nexport default ContactMap","import Container from '../../common/container'\r\nimport ContactText from './contactText'\r\nimport ContactForm from './contactForm'\r\nimport ContactTextIconItem from './contactText-IconItem'\r\nimport ContactMap from './contactMap'\r\nimport './styles/styles.scss'\r\n\r\n// Toda la información de este componente se toma del archivo '../../content/contactContent.json'\r\nimport ContactContent from '../../content/contactContent.json'\r\n\r\n// Componente de la sección de 'Contacto'\r\nconst Contact = () => {\r\n    return(\r\n        <>\r\n        <Container otherClass='contact' id='registro' content={\r\n            <>  \r\n                {/* Componente de texto */}\r\n                <ContactText\r\n                headingTitle={ContactContent.headingTitle}\r\n                paragraph={ContactContent.paragraph}\r\n                iconsContent={\r\n                    // se recorre y devuelve el número de items existentes para mostrar los datos de contacto\r\n                    ContactContent.itemsContact.map( el => {\r\n                        return(\r\n                            <ContactTextIconItem\r\n                            key={el.id}\r\n                            icon={el.icon} \r\n                            iconTitle={el.title} \r\n                            iconText={el.text}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n                />\r\n\r\n                {/* Componente del formulario */}\r\n                <ContactForm />\r\n            </>\r\n        } />\r\n\r\n        {/* Componente del mapa */}\r\n        <ContactMap />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Contact","import InitialBlock from '../../components/initialBlock'\r\nimport CardsPresentation from '../../components/cardsPresentation'\r\nimport AboutUs from '../../components/aboutUs'\r\nimport Testimonial from '../../components/testimonial'\r\nimport Team from '../../components/team'\r\nimport Contact from '../../components/contact'\r\n\r\n// Componente de la página inicial\r\nconst Home = () => {\r\n    return(\r\n        <>\r\n            {/* Bloque Inicial, slider */}\r\n            <InitialBlock />\r\n\r\n            {/* Tarjetas de presentación al inicio */}\r\n            <CardsPresentation />\r\n\r\n            {/* Acerca de Nosotros */}\r\n            <AboutUs />\r\n\r\n            {/* Testimonios de Clientes */}\r\n            <Testimonial />\r\n\r\n            {/* Conoce a nuestro equipo */}\r\n            <Team />\r\n\r\n            {/* Contacto */}\r\n            <Contact />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home","import './styles.scss'\r\n\r\n// Componente de texto de cabecera\r\nconst HeadingTitle = ({ content }) => {\r\n    return(\r\n        <h2 className='heading-title'>{content}</h2>\r\n    )\r\n}\r\n\r\nexport default HeadingTitle"],"sourceRoot":""}